openapi: 3.0.0
info:
  title: watch
  version: '1.0'
servers:
  - url: 'http://localhost:8097'
    description: longwatch
paths:
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the infromation of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                  example: abc@gmail.com
                dateOfBirth:
                  type: string
                  format: date
                  description: ngày sinh
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
  /login:
    post:
      summary: ''
      operationId: post-login
      responses:
        '200':
          description: login sucess!
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  msg:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
              examples:
                sucess:
                  value:
                    status: 1
                    msg: tạo tài khoản thành công
                    data: {}
      description: user/admin login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: tên đăng nhập
                password:
                  type: string
              required:
                - username
                - password
        description: ''
components:
  schemas:
    User:
      title: User Output
      type: object
      description: output api login
      x-examples:
        output Api:
          id: 1
          email: longtranvan15091999@gmail.com
          fullname: Tran Van Long
          phone: '0358172099'
          Sex: 1
          Address: Ha Noi
      properties:
        id:
          description: Unique identifier for the given user.
          type: integer
        username:
          type: string
        fullname:
          type: string
          format: email
        phone:
          format: date
          example: '1997-10-31'
          type: string
        Sex:
          type: integer
          description: Set to true if the user's email has been verified.
        Address:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - username
        - fullname
        - phone
        - Sex
        - Address
